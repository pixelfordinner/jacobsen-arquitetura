// Styles taken from Sassline (https://sassline.com/)

// Setting root sizes and base styles.
html {
  @include rootsize;
  text-size-adjust: 100%;
}

// Site-wide base styles.
body {
  @include fontsize(zeta, all);
  line-height: 2rem;
  color: get-element-color('body-text');
}

// Links.
a:not(.no-defaults) {
  transition: color .1s, background-color .1s;
  color: get-element-color('link-text');
  text-decoration: none;

  &:hover,
  &:active,
  &:focus {
    color: get-element-color('link-text-hover');
    text-decoration: none;
  }
}

.type__grid {
  background-repeat: repeat-y;
  background-size: 100% 1rem;
  background-image: linear-gradient(rgb(0, 255, 255) 0, rgba(255, 255, 255, 0) 1px);
}

// Font-face defered loading

%type-body {
  font-family: unquote(map-get($bodytype, font-family));
  font-style: normal;
  font-weight: map-get($bodytype, light);
}

.type__body--available {

  body {
    @extend %type-body;
  }

  p {
    font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;
  }
}

%type-heading {
  font-feature-settings: 'dlig' 1, 'liga' 1, 'lnum' 1, 'kern' 1;
  font-family: unquote(map-get($headingtype, font-family));
  font-style: normal;
  font-weight: map-get($headingtype, regular);
}

  h1,
  .heading--alpha,
  h2,
  .heading--beta,
  h3,
  .heading--gamma,
  h4,
  .heading--delta,
  h5,
  .heading--epsilon,
  h6,
  .heading--zeta,
  .heading--eta,
  .heading--theta,
  .heading--iota {
    color: get-element-color('heading-text');
  }

.type__heading--available {

  // Headings OpenType ligatures, discretionary ligatures and lining figures enabled if available.
  h1,
  .heading--alpha,
  h2,
  .heading--beta,
  h3,
  .heading--gamma,
  h4,
  .heading--delta,
  h5,
  .heading--epsilon,
  h6,
  .heading--zeta,
  .heading--eta,
  .heading--theta,
  .heading--iota {
    @extend %type-heading;
  }

  small {
    font-family: unquote(map-get($headingtype, font-family));
    font-style: normal;
  }

  .heading--light {
    font-weight: map-get($headingtype, light);
  }

  .heading--bold {
    font-weight: map-get($headingtype, bold);
  }

  .heading--strikethrough {
    text-align: center;
    overflow: hidden;
    color: get-color('grey-dark');

    &::before,
    &::after {
      content: "";
      display: inline-block;
      vertical-align: middle;
      position: relative;
      width: 50%;
      border-top-style: solid;
      border-top-width: 1px;
      border-top-color: get-color('grey-light');
    }

    &::before {
      right: 2em;
      margin-left: -50%;
    }

    &::after {
      left: 2em;
      margin-right: -50%;
    }
  }

  // Button component

  .button {
    @extend %type-heading;

    font-weight: map-get($headingtype, light);
  }
}

// Heading level 1.
h1,
.heading--alpha {
  @include sassline($fontsize: alpha, $font: $headingtype, $lineheight: 3, $below: 1, $breakpoint: all);
}

// Heading level 2.
h2,
.heading--beta {
  @include sassline(beta, $headingtype, 3, 1, all);
}

// Heading level 3.
h3,
.heading--gamma {
  @include sassline(gamma, $headingtype, 3, 1, all);
}

// Heading level 4.
h4,
.heading--delta {
  @include sassline(delta, $headingtype, 2, 0, all);
}

// Heading level 5.
h5,
.heading--epsilon {
  @include sassline(epsilon, $headingtype, 2, 0, all);
}

// Heading level 6.
h6,
.heading--zeta {
  @include sassline(zeta, $headingtype, 2, 0, all);
}

.heading--eta {
  @include sassline(eta, $headingtype, 2, 0, all);
}

.heading--theta {
  @include sassline(theta, $headingtype, 2, 0, all);
}

.heading--iota {
  @include sassline(iota, $headingtype, 1.5, 0, all);
}

// Buttons
.button {
  @include sassline(theta, $headingtype, 2, 0, all);
}

.button--small {
  @include sassline(theta, $headingtype, 1, 0, all);
}

// Nice underlines for text links.
p a:not(.no-defaults),
li a:not(.no-defaults) {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 50%, lighten(get-element-color('link-text'), 20%) 50%);
  background-position: 0 93%;
  background-repeat: repeat-x;
  background-size: 100% .15rem;
  text-shadow: .1rem 0 get-element-color('body-background'),
               .15rem 0 get-element-color('body-background'),
               -.1rem 0 get-element-color('body-background'),
               -.15rem 0 get-element-color('body-background');

  &:hover,
  &:active,
  &:focus {
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 50%, lighten(get-element-color('link-text-hover'), 20%) 50%);
  }
}

// Paragraphs. OpenType ligatures and oldstyle figures enabled if available.
p,
.body--zeta {
  @include baseline($fontsize: zeta, $font: $bodytype, $lineheight: 2, $below: 2, $breakpoint: all);
}

.body--theta {
  @include sassline($fontsize: theta, $font: $bodytype, $lineheight: 2, $below: 1, $breakpoint: all);
}

// Lists.
ul,
ol {
  @include baseline(zeta, $bodytype, 2, 2, all);

  li {
    font-feature-settings: 'kern' 1, 'onum' 1, 'liga' 1;

    @include breakpoint(get-site-breakpoint(tablet)) {
      margin-left: 0;
    }
  }
}

// Bold.
b,
strong,
.bold {
  font-weight: map-get($bodytype, bold);
}

// Italic.
em,
i,
.italic {
  font-style: map-get($bodytype, italic);
}

// Caption and inline small text.
small {
  @include fontsize(theta, all);
  line-height: 1rem;
}

// Letter space those capitals people, Jan Tschichold would be proud.
.uppercase {
  letter-spacing: .1rem;
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

// Real small caps.
.small-caps {
  font-feature-settings: 'smcp' 1, 'kern' 1;
  letter-spacing: .1rem;
}

// Consistent height numbers with OpenType.
.lining-numerals {
  font-feature-settings: 'lnum' 1, 'kern' 1;
}

// Ascending and descending numbers with OpenType.
.oldstyle-numerals {
  font-feature-settings: 'onum' 1, 'kern' 1;
}

